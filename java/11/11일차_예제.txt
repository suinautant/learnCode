문제. 학생들의 정보를 List컬렉션의 ArrayList에 저장하고 검색할 수 있는 자바프로그램을 작성하시오.
- 학생들의 정보는 Student라는 클래스로 나타내며, Student는 학생의 이름, 주소, 전화번호 등의 필드를 가진다.
- ArrayList의 입출력을 처리할 때 반복문을 사용하시오.
- 학생들의 정보를 추가, 조회, 삭제하는 간단한 메뉴를 출력되도록 작성하시오.

*** 메뉴 ***
1. 학생 추가
2. 학생 조회
3. 학생 삭제
4. 종료

=============================================================

[ 풀이1 ]

import java.util.ArrayList;
import java.util.Scanner;

public class HakInfo {

	public static void main(String[] args) {
		List<String> list = new ArrayList<String>();
		Scanner sc = new Scanner(System.in);
		
		while(true) {
			System.out.println("***메뉴***");
			System.out.println("1.학생추가");
			System.out.println("2.학생조회");
			System.out.println("3.학생삭제");
			System.out.println("4.종료");
			//System.out.print("메뉴를 선택하여 주세요:");
			int num = sc.nextInt();
			sc.nextLine();
		
		
			switch(num) {
			case 1:
				System.out.print("학생 이름을 입력하세요.");
				String name= sc.nextLine();
				System.out.print("주소를 입력하세요.");
				String addr = sc.nextLine();
				System.out.print("전화번호를 입력하세요.");
				String tel = sc.nextLine();
				list.add("이름:"+name+" 주소:"+addr+" 전화번호: "+tel);
				break;
			case 2:
				System.out.println("조회할 학생의 번호를 입력하세요.");
				int stunum1 = sc.nextInt();
				String stuinfo=list.get(stunum1);
				System.out.println(stuinfo);
				break;
			case 3:
				System.out.println("삭제할 학생의 번호를 입력하세요."");
				int stunum2 = sc.nextInt();
				list.remove(stunum2);
				break;
			case 4:
				System.exit(0);
			default:
				System.out.println("번호를 다시 입력하세요.");
				break;
			}
		}
		
	}
}

[ 풀이2 ]

import java.util.ArrayList;
import java.util.Scanner;

public class HakInfo {
    // 학생들의 정보를 ArrayList에 저장하고 검색하기 위한 객체 생성
    ArrayList<Student> list = new ArrayList<Student>();
 
    public static void main(String[] args) {
	    // 학생 정보를 담고 있는 객체
	    HakInfo info = new HakInfo();
	    // 키보드로 부터 데이터를 입력받기 위한 객체 생성
	    Scanner scan = new Scanner(System.in);
	      
	
	    // 메뉴 설계
	    try {
		    while(true) {
		    	          System.out.println("*** 메뉴 ***");
			          System.out.println("1. 학생 추가 ");
			          System.out.println("2. 학생 조회");
			          System.out.println("3. 학생 삭제");
			          System.out.println("4. 종료");
			          
			          System.out.print("번호를 입력하세요 : ");
			          int in = scan.nextInt();
			       
			          switch(in) {
			          	case 1: 	add(info);
			          		break;
			          	case 2:	search(info);  
					break;
			          	case 3: 	del(info);  
					break;	          	
			          	case 4: 	System.exit(0);
			          }
		      }
	    }
	    catch (Exception e) {
	         e.printStackTrace();
	    }
    }
 
    // 학생정보 저장하기 위한 메소드
    public static void add(HakInfo info) throws Exception{
      Student std = new Student();
      Scanner scan = new Scanner(System.in);
 
      System.out.print("학생 이름을 입력하세요.");
      std.setStdName(scan.nextLine());
      System.out.print("전화번호를 입력하세요.");
      std.setStdTel(scan.nextLine());
      System.out.print("주소를 입력하세요.");
      std.setStdJuso(scan.nextLine());
 
      info.list.add(std);
   }
   
    // 학생정보 검색
    public static void search(HakInfo info){
      Scanner scan = new Scanner(System.in);
      System.out.print("조회할 학생이름을 입력하세요."); 
      String search = scan.nextLine();
      
      // 확장 for문 사용
      for (Student std : info.list) {
         if(search !=null && std.getStdName().equals(search)){
            System.out.println("학생이름\t전화번호\t\t주소");
            System.out.println(std.toString());
         }else{
           System.out.println("찾는 학생이 없습니다.");
         }
      }
   }
 
    // 학생정보 삭제
    public static void del(HakInfo info){
    	Scanner scan = new Scanner(System.in);
	System.out.print("삭제할 학생이름을 입력하세요."); 
	String del = scan.nextLine();
         
	for (int i = 0; i < info.list.size() ; i++) {
	         Student std = info.list.get(i);
	        
	         if(del !=null && std.getStdName().equals(del)){
	              info.list.remove(i);
	         }else{
	              System.out.println("찾는 학생이 없습니다.");
	         }
         }
    }
}

// Student 클래스 생성
class Student {
 
    // Student 클래스 학생이름, 주소, 전화번호를 등의 필드 선언
     private String stdName;
     private String stdJuso;
     private String stdTel;
 
 
    // 생성자 선언
    public Student() {}
    public Student(String stdName, String stdJuso, String stdTel){
      this.stdName = stdName;
      this.stdJuso = stdJuso;
      this.stdTel = stdTel;
    }
 
   // 필드에 대한 적절한 접근자 메소드들
   public String getStdName() {
       return stdName;
   }
    public void setStdName(String stdName) {
      this.stdName = stdName;
   }
    public String getStdJuso() {
       return stdJuso;
    }
    public void setStdJuso(String stdJuso) {
       this.stdJuso = stdJuso;
    }
     public String getStdTel() {
      return stdTel;
    }
    public void setStdTel(String stdTel) {
      this.stdTel = stdTel;
    }
 
    // 학생의 정보를 출력하기 위한 메소드
    public String toString(){
        return this.stdName + "\t" + this.stdTel + "\t" + this.stdJuso;
    }
} 
